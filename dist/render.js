/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/fragment.glsl":
/*!***************************!*\
  !*** ./src/fragment.glsl ***!
  \***************************/
/***/ ((module) => {

eval("module.exports = \"#version 300 es\\nprecision highp float;\\n\\n#define texture2D texture\\n#define texture2DLodEXT textureLod\\n#define textureCube texture\\n\\n#define varying in\\n#define gl_FragColor outColor\\nlayout (location = 0) out vec4 outColor;\";\n\n//# sourceURL=webpack://render.js/./src/fragment.glsl?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const canvas = document.createElement(\"canvas\");\n\nconst gl = canvas.getContext(\"webgl2\", { antialias: true, depth : false });\n\nconst oestexturefloatlinear     = gl.getExtension(\"OES_texture_float_linear\");\nconst colorbufferfloat          = gl.getExtension(\"EXT_color_buffer_float\");\nconst floatblend                = gl.getExtension(\"EXT_float_blend\");\nconst vertexSource = __webpack_require__(/*! ./vertex.glsl */ \"./src/vertex.glsl\");\nconst fragmentSource = __webpack_require__(/*! ./fragment.glsl */ \"./src/fragment.glsl\");\n\n\nconsole.assert(gl,\"Web brwowser doesn't support webgl\");\n\ngl.disable( gl.CULL_FACE );\ngl.enable( gl.BLEND );\ngl.disable(gl.STENCIL_TEST);\ngl.blendEquation( gl.FUNC_ADD );\ngl.blendFunc( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA );\ngl.pixelStorei(gl.PACK_ALIGNMENT,                     1);\ngl.pixelStorei(gl.UNPACK_ALIGNMENT,                   1);\ngl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL,                true);\ngl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,     false);\ngl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, gl.NONE);\n\nconst maxVertexAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\nconst WRAPS = {\n\tCLAMP_TO_EDGE   : gl.CLAMP_TO_EDGE,\n\tREPEAT          : gl.REPEAT,\n\tMIRRORED_REPEAT : gl.MIRRORED_REPEAT\n};\n\nexports.WRAPS = WRAPS;\n\n\nconst FILTERS = {\n\tLINEAR  : gl.LINEAR,\n\tNEAREST : gl.NEAREST\n};\nexports.FILTERS = FILTERS;\n\nconst BUFFER_TYPES = {\n\tUNSIGNED_BYTE          : gl.UNSIGNED_BYTE,\n\tHALF_FLOAT             : gl.HALF_FLOAT,\n\tFLOAT                  : gl.FLOAT\n}\nexports.BUFFER_TYPES = BUFFER_TYPES;\n\nconst FORMATS = {\n\tRED  : gl.RED,\n\tRG   : gl.RG,\n\tRGB  : gl.RGB,\n\tRGBA : gl.RGBA\n};\nexports.FORMATS = FORMATS;\n\nconst internalFormats = {};\ninternalFormats[BUFFER_TYPES.UNSIGNED_BYTE] = {};\ninternalFormats[BUFFER_TYPES.UNSIGNED_BYTE][FORMATS.RED] = gl.R8;\ninternalFormats[BUFFER_TYPES.UNSIGNED_BYTE][FORMATS.RG]  = gl.RG8;\ninternalFormats[BUFFER_TYPES.UNSIGNED_BYTE][FORMATS.RGB] = gl.RGB8;\ninternalFormats[BUFFER_TYPES.UNSIGNED_BYTE][FORMATS.RGBA]= gl.RGBA8;\n\ninternalFormats[BUFFER_TYPES.HALF_FLOAT] = {};\ninternalFormats[BUFFER_TYPES.HALF_FLOAT][FORMATS.RED] = gl.R16F;\ninternalFormats[BUFFER_TYPES.HALF_FLOAT][FORMATS.RG]  = gl.RG16F;\ninternalFormats[BUFFER_TYPES.HALF_FLOAT][FORMATS.RGB] = gl.RGB16F;\ninternalFormats[BUFFER_TYPES.HALF_FLOAT][FORMATS.RGBA]= gl.RGBA16F;\n\ninternalFormats[BUFFER_TYPES.FLOAT] = {};\ninternalFormats[BUFFER_TYPES.FLOAT][FORMATS.RED] = gl.R32F;\ninternalFormats[BUFFER_TYPES.FLOAT][FORMATS.RG]  = gl.RG32F;\ninternalFormats[BUFFER_TYPES.FLOAT][FORMATS.RGB] = gl.RGB32F;\ninternalFormats[BUFFER_TYPES.FLOAT][FORMATS.RGBA]= gl.RGBA32F;\n\nconst UNIFORMS_TYPES = {\n\tBOOL       : gl.BOOL,\n\tFLOAT      : gl.FLOAT,\n\tINT        : gl.INT,\n\tFLOAT_VEC2 : gl.FLOAT_VEC2,\n\tFLOAT_VEC3 : gl.FLOAT_VEC3,\n\tFLOAT_VEC4 : gl.FLOAT_VEC4,\n\tFLOAT_MAT2 : gl.FLOAT_MAT2,\n\tFLOAT_MAT3 : gl.FLOAT_MAT3,\n\tFLOAT_MAT4 : gl.FLOAT_MAT4,\n\tSAMPLER_2D : gl.SAMPLER_2D\n};\nexports.UNIFORMS_TYPES = UNIFORMS_TYPES;\n\nfunction RenderingBuffer(settings) {\n\tthis.settings = Object.assign({\n\t\twidth  : 256,\n\t\theight : 256,\n\t\tformat : FORMATS.RGBA,\n\t\ttype   : BUFFER_TYPES.FLOAT,\n\t\twrap   : { s : WRAPS.CLAMP_TO_EDGE, t : WRAPS.CLAMP_TO_EDGE },\n\t\tfilter : { mag : FILTERS.LINEAR, min : FILTERS.LINEAR},\n\t},settings);\n\tObject.defineProperty(this, \"buffer\", {\n\t\tvalue : gl.createTexture(),\n\t\twritable: false,\n\t\tenurabble: false\n\t})\n\tgl.bindTexture(gl.TEXTURE_2D, this.buffer);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, this.settings.wrap.s);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T,  this.settings.wrap.t);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, this.settings.filter.mag);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, this.settings.filter.min);\n\tgl.texImage2D(gl.TEXTURE_2D, 0, internalFormats[this.settings.type][this.settings.format], this.settings.width, this.settings.height, 0, this.settings.format, this.settings.type, null);\n}\n\nRenderingBuffer.prototype.setData = function (data) {\n\tgl.bindTexture(gl.TEXTURE_2D, this.buffer);\n\tgl.texImage2D(gl.TEXTURE_2D, 0, internalFormats[this.settings.type][this.settings.format], this.settings.width, this.settings.height, 0, this.settings.format, this.settings.type, data);\n\n}\n\nRenderingBuffer.prototype.release = function () {\n\tgl.deleteTexture(this.buffer);\n}\n\nRenderingBuffer.FromImage = function(image) {\n\n\tlet buffer = new RenderingBuffer({ width: image.width, height: image.height});\n\tbuffer.setData(image);\n\treturn buffer;\n}\n\nexports.RenderingBuffer = RenderingBuffer;\n\n\nfunction RenderingTarget() {\n\tlet argTarget, argSetting;\n\tfor (const param of arguments) {\n\t\tif (param instanceof HTMLCanvasElement || param instanceof RenderingBuffer) {\n\t\t\targTarget = param\n\t\t} else if(typeof param === 'object' && !Array.isArray(param) && param !== null) {\n\t\t\targSetting = param;\n\t\t}\n\t}\n\tthis.settings = Object.assign({\n\t\tautoWires : {\n\t\t\tresolution : true\n\t\t}\n\t},argSetting);\n\n\n\tlet _target =null;\n\n\tObject.defineProperties(this,{\n\t\ttarget : {\n\t\t\tget : function () {\n\t\t\t\treturn _target;\n\t\t\t},\n\t\t\tset : function(target) {\n\t\t\t\tif(target !== _target) {\n\t\t\t\t\tthis.release();\n\t\t\t\t}\n\t\t\t\tif(target instanceof HTMLCanvasElement) {\n\t\t\t\t\tlet context2D = target.getContext(\"2d\");\n\t\t\t\t\tObject.defineProperty(this, \"render\", {\n\t\t\t\t\t\twritable: false,\n\t\t\t\t\t\tenurabble: false,\n\t\t\t\t\t\tconfigurable : true,\n\t\t\t\t\t\tvalue : function (program) {\n\t\t\t\t\t\t\tif(this.settings.autoWires.resolution && program.uniforms.resolution?.type == UNIFORMS_TYPES.FLOAT_VEC2) {\n\t\t\t\t\t\t\t\tprogram.uniforms.resolution.value = [_target.width, _target.height];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontext2D.drawImage(program.render({width : _target.width, height: _target.height}), 0, 0, _target.width, _target.height);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tObject.defineProperty(this, \"release\", {\n\t\t\t\t\t\twritable: true,\n\t\t\t\t\t\tenurabble: true,\n\t\t\t\t\t\tconfigurable : true,\n\t\t\t\t\t\tvalue : function () {}\n\t\t\t\t\t});\n\t\t\t\t} else if (target instanceof RenderingBuffer) {\n\t\t\t\t\tlet depthBuffer = gl.createRenderbuffer();\n\t\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, depthBuffer);\n\t\t\t\t\tgl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, target.settings.width, target.settings.height);\n\t\t\t\t\tlet frameBuffer = gl.createFramebuffer();\n\t\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n\t\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, target.buffer, 0);\n\t\t\t\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.RENDERBUFFER, depthBuffer);\n\t\t\t\t\tObject.defineProperty(this, \"render\", {\n\t\t\t\t\t\twritable: false,\n\t\t\t\t\t\tenurabble: false,\n\t\t\t\t\t\tconfigurable : true,\n\t\t\t\t\t\tvalue : function (program) {\n\t\t\t\t\t\t\tif(this.settings.autoWires.resolution && program.uniforms.resolution?.type == UNIFORMS_TYPES.FLOAT_VEC2) {\n\t\t\t\t\t\t\t\tprogram.uniforms.resolution.value =[ _target.settings.width, _target.settings.height];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprogram.render({width : _target.settings.width, height: _target.settings.height, frameBuffer});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tObject.defineProperty(this, \"release\", {\n\t\t\t\t\t\twritable: true,\n\t\t\t\t\t\tenurabble: true,\n\t\t\t\t\t\tconfigurable : true,\n\t\t\t\t\t\tvalue : function () {\n\t\t\t\t\t\t\tgl.deleteRenderbuffer(depthBuffer);\n\t\t\t\t\t\t\tgl.deleteFramebuffer(frameBuffer);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t_target = target;\n\t\t\t}\n\t\t}\n\t});\n\n\tif(argTarget) {\n\t\tthis.target = argTarget;\n\t}\n}\n\nRenderingTarget.prototype.release = function() {\n\t//this can be override by set target\n}\n\nexports.RenderingTarget = RenderingTarget;\n\nfunction RenderingProgram(settings) {\n\n\tvar _clearColor = [0,0,0,0];\n\tthis.settings = Object.assign({\n\t\tclearColor : _clearColor\n\t},settings);\n\n\tconst shaderProgram = gl.createProgram();\n\tconst vertexShader = gl.createShader(gl.VERTEX_SHADER);\n\tgl.shaderSource(vertexShader, vertexSource);\n\tgl.compileShader(vertexShader);\n\tgl.attachShader(shaderProgram, vertexShader);\n\t// if(!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n\t// \tthrow new Error(\"An error occurred compiling the vertexShader: \" + gl.getShaderInfoLog(vertexShader));\n\t// }\n\tvar pixelShader = null;\n\n\tObject.defineProperties(this,{\n\t\t/**\n\t\t * private properties\n\t\t */\n\t\tshaderProgram  : {\n\t\t\tvalue : shaderProgram,\n\t\t\twritable: false,\n\t\t\tenurabble: false\n\t\t},\n\t\tvertexShader: {\n\t\t\tvalue : vertexShader,\n\t\t\twritable: false,\n\t\t\tenurabble: false\n\t\t},\n\t\t/**\n\t\t * public properties\n\t\t */\n\t\tsource : {\n\t\t\tget : function () {\n\t\t\t\treturn this.settings.source;\n\t\t\t},\n\t\t\tset : function(src) {\n\t\t\t\tif (pixelShader) {\n\t\t\t\t\tgl.detachShader(this.shaderProgram,pixelShader);\n\t\t\t\t\tgl.deleteShader(pixelShader);\n\t\t\t\t}\n\t\t\t\tpixelShader = gl.createShader(gl.FRAGMENT_SHADER);\n\t\t\t\tgl.shaderSource(pixelShader,fragmentSource + src );\n\t\t\t\tgl.compileShader(pixelShader);\n\t\t\t\tif(!gl.getShaderParameter(pixelShader, gl.COMPILE_STATUS)) {\n\t\t\t\t\tthrow new Error(\"An error occurred compiling the PixelShaders: \" + gl.getShaderInfoLog(pixelShader));\n\t\t\t\t}\n\t\t\t\tgl.attachShader(this.shaderProgram, pixelShader);\n\t\t\t\tgl.linkProgram(this.shaderProgram);\n\t\t\t\tthis.settings.source = src;\n\t\t\t\tthis.uniforms = {};\n\t\t\t\tconst numUniforms = gl.getProgramParameter(this.shaderProgram, gl.ACTIVE_UNIFORMS);\n\t\t\t\tfor (let i = 0; i < numUniforms; ++i) {\n\t\t\t\t\tconst info = gl.getActiveUniform(this.shaderProgram, i);\n\t\t\t\t\tswitch(info.type) {\n\t\t\t\t\t\tcase gl.BOOL :\n\t\t\t\t\t\t\tthis.uniforms[info.name] = Object.create(Object.prototype,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype :  { value : UNIFORMS_TYPES.BOOL, enumerable : true },\n\t\t\t\t\t\t\t\tlocation : { value : gl.getUniformLocation(this.shaderProgram, info.name), enumerable : true },\n\t\t\t\t\t\t\t\tvalue :  { value: false, enumerable : true, writable: true }\n\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase gl.INT :\n\t\t\t\t\t\t\tthis.uniforms[info.name] = Object.create(Object.prototype,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype :  { value : UNIFORMS_TYPES.INT, enumerable : true },\n\t\t\t\t\t\t\t\tlocation :   { value : gl.getUniformLocation(this.shaderProgram, info.name), enumerable : true },\n\t\t\t\t\t\t\t\tvalue : { value: 0, enumerable : true, writable: true }\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase gl.FLOAT :\n\t\t\t\t\t\t\tthis.uniforms[info.name] = Object.create(Object.prototype,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype :  { value : UNIFORMS_TYPES.FLOAT, enumerable : true },\n\t\t\t\t\t\t\t\tlocation : { value : gl.getUniformLocation(this.shaderProgram, info.name), enumerable : true },\n\t\t\t\t\t\t\t\tvalue : { value: 0, enumerable : true, writable: true }\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase gl.FLOAT_VEC4 :\n\t\t\t\t\t\t\tthis.uniforms[info.name] = Object.create(Object.prototype,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype :  { value : UNIFORMS_TYPES.FLOAT_VEC4, enumerable : true },\n\t\t\t\t\t\t\t\tlocation : { value : gl.getUniformLocation(this.shaderProgram, info.name), enumerable : true },\n\t\t\t\t\t\t\t\tvalue : { value: [0, 0, 0, 0], enumerable : true, writable: true }\n\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase gl.FLOAT_VEC3 :\n\t\t\t\t\t\t\tthis.uniforms[info.name] = Object.create(Object.prototype,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype :  { value : UNIFORMS_TYPES.FLOAT_VEC3, enumerable : true },\n\t\t\t\t\t\t\t\tlocation : { value : gl.getUniformLocation(this.shaderProgram, info.name), enumerable : true },\n\t\t\t\t\t\t\t\tvalue : { value: [0, 0, 0], enumerable : true, writable: true }\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase gl.FLOAT_VEC2 :\n\t\t\t\t\t\t\tthis.uniforms[info.name] = Object.create(Object.prototype,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype :  { value : UNIFORMS_TYPES.FLOAT_VEC2, enumerable : true },\n\t\t\t\t\t\t\t\tlocation : { value : gl.getUniformLocation(this.shaderProgram, info.name), enumerable : true },\n\t\t\t\t\t\t\t\tvalue : { value: [0, 0], enumerable : true, writable: true }\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase gl.FLOAT_MAT4 :\n\t\t\t\t\t\t\tthis.uniforms[info.name] = Object.create(Object.prototype,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype :  { value : UNIFORMS_TYPES.FLOAT_MAT4, enumerable : true },\n\t\t\t\t\t\t\t\tlocation : { value : gl.getUniformLocation(this.shaderProgram, info.name), enumerable : true },\n\t\t\t\t\t\t\t\tvalue : { value: new Float32Array(16), enumerable : true, writable: true }\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\t\tcase gl.FLOAT_MAT3:\n\t\t\t\t\t\t\tthis.uniforms[info.name] = Object.create(Object.prototype,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype :  { value : UNIFORMS_TYPES.FLOAT_MAT3, enumerable : true },\n\t\t\t\t\t\t\t\tlocation : { value : gl.getUniformLocation(this.shaderProgram, info.name), enumerable : true },\n\t\t\t\t\t\t\t\tvalue : { value: new Float32Array(9), enumerable : true, writable: true }\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\t\tcase gl.FLOAT_MAT2 :\n\t\t\t\t\t\t\tthis.uniforms[info.name] = Object.create(Object.prototype,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype :  { value : UNIFORMS_TYPES.FLOAT_MAT2, enumerable : true },\n\t\t\t\t\t\t\t\tlocation : { value : gl.getUniformLocation(this.shaderProgram, info.name), enumerable : true },\n\t\t\t\t\t\t\t\tvalue : { value: new Float32Array(4), enumerable : true, writable: true }\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase gl.SAMPLER_2D :\n\t\t\t\t\t\t\tthis.uniforms[info.name] = Object.create(Object.prototype,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype :  { value : UNIFORMS_TYPES.SAMPLER_2D, enumerable : true },\n\t\t\t\t\t\t\t\tlocation : { value : gl.getUniformLocation(this.shaderProgram, info.name), enumerable : true },\n\t\t\t\t\t\t\t\tvalue : { value: null, enumerable : true, writable: true }\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t},\n\t\tclearColor : {\n\t\t\tget : function () {\n\t\t\t\treturn this.settings.clearColor;\n\t\t\t},\n\t\t\tset : function(color) {\n\t\t\t\tthis.settings.clearColor = color;\n\t\t\t\t_clearColor = color;\n\t\t\t}\n\t\t},\n\t\trender : {\n\t\t\twritable: false,\n\t\t\tenurabble: true,\n\t\t\tvalue : function (target) {\n\n\t\t\t\tif (target instanceof RenderingTarget) {\n\t\t\t\t\treturn target.render(this);\n\t\t\t\t}\n\t\t\t\tvar renderSettting = Object.assign({\n\t\t\t\t\twidth : 640,\n\t\t\t\t\theight : 480,\n\t\t\t\t\tframeBuffer : null\n\t\t\t\t},target);\n\t\t\t\tcanvas.width = renderSettting.width;\n\t\t\t\tcanvas.height = renderSettting.height;\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, renderSettting.frameBuffer);\n\t\t\t\tgl.viewport(0, 0, renderSettting.width, renderSettting.height);\n\t\t\t\tgl.scissor(0, 0, renderSettting.width, renderSettting.height);\n\t\t\t\tgl.clearColor.apply(gl, _clearColor);\n\t\t\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\n\t\t\t\tfor (var i = 0; i < maxVertexAttribs; ++i) {\n\t\t\t\t\tgl.disableVertexAttribArray(i);\n\t\t\t\t}\n\t\t\t\tgl.useProgram(this.shaderProgram);\n\t\t\t\tlet textIndex = 0;\n\t\t\t\tfor(const uniform of Object.values(this.uniforms)) {\n\t\t\t\t\tswitch(uniform.type) {\n\t\t\t\t\t\tcase UNIFORMS_TYPES.BOOL :\n\t\t\t\t\t\t\tgl.uniform1i(uniform.location, uniform.value? 1 : 0);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase UNIFORMS_TYPES.INT:\n\t\t\t\t\t\t\tgl.uniform1i(uniform.location, uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase UNIFORMS_TYPES.FLOAT:\n\t\t\t\t\t\t\tgl.uniform1f(uniform.location, uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase UNIFORMS_TYPES.FLOAT_VEC4:\n\t\t\t\t\t\t\tgl.uniform4fv(uniform.location, uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase UNIFORMS_TYPES.FLOAT_VEC3:\n\t\t\t\t\t\t\tgl.uniform3fv(uniform.location, uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase UNIFORMS_TYPES.FLOAT_VEC2:\n\t\t\t\t\t\t\tgl.uniform2fv(uniform.location, uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase UNIFORMS_TYPES.FLOAT_MAT4:\n\t\t\t\t\t\t\tgl.uniformMatrix4fv(uniform.location, false, uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase UNIFORMS_TYPES.FLOAT_MAT3:\n\t\t\t\t\t\t\tgl.uniformMatrix3fv(uniform.location, false, uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase UNIFORMS_TYPES.FLOAT_MAT2:\n\t\t\t\t\t\t\tgl.uniformMatrix2fv(uniform.location, false, uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase UNIFORMS_TYPES.SAMPLER_2D:\n\t\t\t\t\t\t\tif (uniform.value instanceof RenderingBuffer) {\n\t\t\t\t\t\t\t\tgl.uniform1i(uniform.location, textIndex);\n\t\t\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + textIndex);\n\t\t\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, uniform.value.buffer);\n\t\t\t\t\t\t\t\ttextIndex+=1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\n\t\t\t\t// console.log(\"error :\", gl.getError());\n\n\t\t\t\treturn canvas;\n\n\t\t\t}\n\t\t},\n\n\t\trelease : {\n\t\t\tvalue : function () {\n\t\t\t\tif (pixelShader) {\n\t\t\t\t\tgl.detachShader(this.shaderProgram,pixelShader);\n\t\t\t\t\tgl.deleteShader(pixelShader);\n\t\t\t\t}\n\n\t\t\t\tgl.detachShader(this.shaderProgram,vertexShader);\n\t\t\t\tgl.deleteShader(vertexShader);\n\t\t\t\tgl.deleteProgram(shaderProgram);\n\n\t\t\t}\n\t\t}\n\n\t});\n\n\tif(this.settings.source) {\n\t\tthis.source = this.settings.source;\n\t}\n\n\n}\n\nexports.RenderingProgram = RenderingProgram;\n\n//# sourceURL=webpack://render.js/./src/main.js?");

/***/ }),

/***/ "./src/vertex.glsl":
/*!*************************!*\
  !*** ./src/vertex.glsl ***!
  \*************************/
/***/ ((module) => {

eval("module.exports = \"#version 300 es\\n\\nvoid main(void) {\\n\\tvec2 vertex[4];\\n\\tvertex[0] = vec2(-1.0, -1.0);\\n\\tvertex[1] = vec2(-1.0,  1.0);\\n\\tvertex[2] = vec2( 1.0, -1.0);\\n\\tvertex[3] = vec2( 1.0,  1.0);\\n\\tgl_Position.xy = vertex[gl_VertexID];\\n\\tgl_Position.z = 0.0;\\n\\tgl_Position.w = 1.0;\\n}\";\n\n//# sourceURL=webpack://render.js/./src/vertex.glsl?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});